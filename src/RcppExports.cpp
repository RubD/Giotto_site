// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// libNormFast
arma::mat libNormFast(arma::mat raw_matrix, arma::rowvec scalefactor);
RcppExport SEXP _Giotto_libNormFast(SEXP raw_matrixSEXP, SEXP scalefactorSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type raw_matrix(raw_matrixSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type scalefactor(scalefactorSEXP);
    rcpp_result_gen = Rcpp::wrap(libNormFast(raw_matrix, scalefactor));
    return rcpp_result_gen;
END_RCPP
}
// logNormFast
arma::mat logNormFast(arma::mat mymatrix, int base, int offset);
RcppExport SEXP _Giotto_logNormFast(SEXP mymatrixSEXP, SEXP baseSEXP, SEXP offsetSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mymatrix(mymatrixSEXP);
    Rcpp::traits::input_parameter< int >::type base(baseSEXP);
    Rcpp::traits::input_parameter< int >::type offset(offsetSEXP);
    rcpp_result_gen = Rcpp::wrap(logNormFast(mymatrix, base, offset));
    return rcpp_result_gen;
END_RCPP
}
// armaScaleRow
arma::mat armaScaleRow(arma::mat Z);
RcppExport SEXP _Giotto_armaScaleRow(SEXP ZSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    rcpp_result_gen = Rcpp::wrap(armaScaleRow(Z));
    return rcpp_result_gen;
END_RCPP
}
// armaScaleCol
arma::mat armaScaleCol(arma::mat Z);
RcppExport SEXP _Giotto_armaScaleCol(SEXP ZSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    rcpp_result_gen = Rcpp::wrap(armaScaleCol(Z));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_Giotto_libNormFast", (DL_FUNC) &_Giotto_libNormFast, 2},
    {"_Giotto_logNormFast", (DL_FUNC) &_Giotto_logNormFast, 3},
    {"_Giotto_armaScaleRow", (DL_FUNC) &_Giotto_armaScaleRow, 1},
    {"_Giotto_armaScaleCol", (DL_FUNC) &_Giotto_armaScaleCol, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_Giotto(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
